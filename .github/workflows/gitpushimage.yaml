  update_k8s_yaml:
    runs-on: ubuntu-latest
    needs: build_push_docker_image

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.name  "${{ secrets.GIT_USERNAME }}"

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update deployment.yaml image tag (safe) and validate
        env:
          VERSION: ${{ needs.build_push_docker_image.outputs.version }}
        run: |
          set -euo pipefail
          yq --version

          # Update ONLY the Deployment doc named spark-reports-deployment,
          # and ONLY the container named sparkreports-container
          yq -i '
            select(.kind == "Deployment" and .metadata.name == "spark-reports-deployment")
            | (.spec.template.spec.containers[]
              | select(.name == "sparkreports-container")
              | .image) = "monicamarshall/sparkreports:" + env(VERSION)
          ' deployment.yaml

          # Validate before committing so ArgoCD never sees broken YAML
          kubectl apply --dry-run=client -f deployment.yaml

          # Stage & commit local edits FIRST
          git add deployment.yaml
          git commit -m "chore: deploy image tag ${VERSION}" || echo "No changes to commit"

          # Rebase onto remote to avoid rejects
          git fetch origin
          git pull --rebase --autostash origin "${GITHUB_REF_NAME}"

          # Push the rebased commit
          git push origin "${GITHUB_REF_NAME}"
