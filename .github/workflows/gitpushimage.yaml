name: Build, push, and bump sparkreports image

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build_push_docker_image:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump version from version.txt
        id: bump
        run: |
          if [ ! -f version.txt ]; then echo 0 > version.txt; fi
          CUR=$(cat version.txt | tr -d '\r')
          NEW=$((CUR + 1))
          echo "$NEW" > version.txt
          echo "version=$NEW" >> "$GITHUB_OUTPUT"
          echo "VERSION=$NEW" >> "$GITHUB_ENV"
          echo "Bumped version: $CUR -> $NEW"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR with Maven
        run: mvn -q -B clean package --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            monicamarshall/sparkreports:${{ env.VERSION }}
            monicamarshall/sparkreports:latest

      - name: Commit updated version.txt
        run: |
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.name  "${{ secrets.GIT_USERNAME }}"
          git add version.txt
          git commit -m "chore: bump version to $VERSION" || echo "No changes to commit"
          git push || true

  update_k8s_yaml:
    runs-on: ubuntu-latest
    needs: build_push_docker_image

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.name  "${{ secrets.GIT_USERNAME }}"

      - name: Update deployment.yaml image tag
        env:
          VERSION: ${{ needs.build_push_docker_image.outputs.version }}
        run: |
          # Update only the image line for sparkreports
          sed -i 's|image: *monicamarshall/sparkreports:.*|image: monicamarshall/sparkreports:'"$VERSION"'|' deployment.yaml
          git add deployment.yaml
          git commit -m "chore: deploy image tag ${VERSION}" || echo "No changes to commit"
          git push || true

  
  verify_deploy:
    runs-on: ubuntu-latest
    needs: update_k8s_yaml        # requires the version output from build job to be committed
    env:
      AWS_REGION: us-east-2
      EKS_CLUSTER: spark-cluster
      NAMESPACE: spark-reports
      DEPLOYMENT: spark-reports-deployment
      CONTAINER_NAME: sparkreports-container
      EXPECTED_TAG: ${{ needs.build_push_docker_image.outputs.version }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          # If you use OIDC role assumption, set role-to-assume here
          # role-to-assume: arn:aws:iam::828909213317:role/<your-ci-role>

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name "${EKS_CLUSTER}" --region "${AWS_REGION}"

      - name: Wait for rollout to complete
        run: |
          kubectl rollout status "deployment/${DEPLOYMENT}" -n "${NAMESPACE}" --timeout=5m

      - name: Verify image tag matches expected
        run: |
          ACTUAL_IMAGE=$(kubectl get deployment "${DEPLOYMENT}" -n "${NAMESPACE}" \
            -o jsonpath='{.spec.template.spec.containers[0].image}')
          echo "Cluster is running image: ${ACTUAL_IMAGE}"
          # Expecting monicamarshall/sparkreports:<tag>
          if ! echo "${ACTUAL_IMAGE}" | grep -q "monicamarshall/sparkreports:${EXPECTED_TAG}$"; then
            echo "ERROR: Expected tag :${EXPECTED_TAG} but found ${ACTUAL_IMAGE}"
            exit 1
          fi
          echo "OK: Image tag matches :${EXPECTED_TAG}"
